// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/directoryapi/directory.proto

/*
Package directoryapi is a generated protocol buffer package.

It is generated from these files:
	pkg/directoryapi/directory.proto

It has these top-level messages:
	PutEntityRequest
	PutEntityResponse
	GetEntityRequest
	GetEntityResponse
	Entity
	Patient
	Office
	Date
*/
package directoryapi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PutEntityRequest struct {
	Entity *Entity `protobuf:"bytes,1,opt,name=entity" json:"entity,omitempty"`
}

func (m *PutEntityRequest) Reset()                    { *m = PutEntityRequest{} }
func (m *PutEntityRequest) String() string            { return proto.CompactTextString(m) }
func (*PutEntityRequest) ProtoMessage()               {}
func (*PutEntityRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PutEntityRequest) GetEntity() *Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

type PutEntityResponse struct {
	EntityId string `protobuf:"bytes,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
}

func (m *PutEntityResponse) Reset()                    { *m = PutEntityResponse{} }
func (m *PutEntityResponse) String() string            { return proto.CompactTextString(m) }
func (*PutEntityResponse) ProtoMessage()               {}
func (*PutEntityResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PutEntityResponse) GetEntityId() string {
	if m != nil {
		return m.EntityId
	}
	return ""
}

type GetEntityRequest struct {
	EntityId string `protobuf:"bytes,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
}

func (m *GetEntityRequest) Reset()                    { *m = GetEntityRequest{} }
func (m *GetEntityRequest) String() string            { return proto.CompactTextString(m) }
func (*GetEntityRequest) ProtoMessage()               {}
func (*GetEntityRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetEntityRequest) GetEntityId() string {
	if m != nil {
		return m.EntityId
	}
	return ""
}

type GetEntityResponse struct {
	Entity *Entity `protobuf:"bytes,1,opt,name=entity" json:"entity,omitempty"`
}

func (m *GetEntityResponse) Reset()                    { *m = GetEntityResponse{} }
func (m *GetEntityResponse) String() string            { return proto.CompactTextString(m) }
func (*GetEntityResponse) ProtoMessage()               {}
func (*GetEntityResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetEntityResponse) GetEntity() *Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

type Entity struct {
	EntityId string `protobuf:"bytes,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	// Types that are valid to be assigned to TypeAttributes:
	//	*Entity_Patient
	//	*Entity_Office
	TypeAttributes isEntity_TypeAttributes `protobuf_oneof:"type_attributes"`
}

func (m *Entity) Reset()                    { *m = Entity{} }
func (m *Entity) String() string            { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()               {}
func (*Entity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type isEntity_TypeAttributes interface {
	isEntity_TypeAttributes()
}

type Entity_Patient struct {
	Patient *Patient `protobuf:"bytes,2,opt,name=patient,oneof"`
}
type Entity_Office struct {
	Office *Office `protobuf:"bytes,3,opt,name=office,oneof"`
}

func (*Entity_Patient) isEntity_TypeAttributes() {}
func (*Entity_Office) isEntity_TypeAttributes()  {}

func (m *Entity) GetTypeAttributes() isEntity_TypeAttributes {
	if m != nil {
		return m.TypeAttributes
	}
	return nil
}

func (m *Entity) GetEntityId() string {
	if m != nil {
		return m.EntityId
	}
	return ""
}

func (m *Entity) GetPatient() *Patient {
	if x, ok := m.GetTypeAttributes().(*Entity_Patient); ok {
		return x.Patient
	}
	return nil
}

func (m *Entity) GetOffice() *Office {
	if x, ok := m.GetTypeAttributes().(*Entity_Office); ok {
		return x.Office
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Entity) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Entity_OneofMarshaler, _Entity_OneofUnmarshaler, _Entity_OneofSizer, []interface{}{
		(*Entity_Patient)(nil),
		(*Entity_Office)(nil),
	}
}

func _Entity_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Entity)
	// type_attributes
	switch x := m.TypeAttributes.(type) {
	case *Entity_Patient:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Patient); err != nil {
			return err
		}
	case *Entity_Office:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Office); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Entity.TypeAttributes has unexpected type %T", x)
	}
	return nil
}

func _Entity_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Entity)
	switch tag {
	case 2: // type_attributes.patient
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Patient)
		err := b.DecodeMessage(msg)
		m.TypeAttributes = &Entity_Patient{msg}
		return true, err
	case 3: // type_attributes.office
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Office)
		err := b.DecodeMessage(msg)
		m.TypeAttributes = &Entity_Office{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Entity_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Entity)
	// type_attributes
	switch x := m.TypeAttributes.(type) {
	case *Entity_Patient:
		s := proto.Size(x.Patient)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Entity_Office:
		s := proto.Size(x.Office)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Patient struct {
	LastName   string `protobuf:"bytes,1,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	FirstName  string `protobuf:"bytes,2,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	MiddleName string `protobuf:"bytes,3,opt,name=middle_name,json=middleName" json:"middle_name,omitempty"`
	Suffix     string `protobuf:"bytes,4,opt,name=suffix" json:"suffix,omitempty"`
	Birthdate  *Date  `protobuf:"bytes,5,opt,name=birthdate" json:"birthdate,omitempty"`
}

func (m *Patient) Reset()                    { *m = Patient{} }
func (m *Patient) String() string            { return proto.CompactTextString(m) }
func (*Patient) ProtoMessage()               {}
func (*Patient) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Patient) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Patient) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Patient) GetMiddleName() string {
	if m != nil {
		return m.MiddleName
	}
	return ""
}

func (m *Patient) GetSuffix() string {
	if m != nil {
		return m.Suffix
	}
	return ""
}

func (m *Patient) GetBirthdate() *Date {
	if m != nil {
		return m.Birthdate
	}
	return nil
}

type Office struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *Office) Reset()                    { *m = Office{} }
func (m *Office) String() string            { return proto.CompactTextString(m) }
func (*Office) ProtoMessage()               {}
func (*Office) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Office) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Date struct {
	Year  uint32 `protobuf:"varint,1,opt,name=year" json:"year,omitempty"`
	Month uint32 `protobuf:"varint,2,opt,name=month" json:"month,omitempty"`
	Day   uint32 `protobuf:"varint,3,opt,name=day" json:"day,omitempty"`
}

func (m *Date) Reset()                    { *m = Date{} }
func (m *Date) String() string            { return proto.CompactTextString(m) }
func (*Date) ProtoMessage()               {}
func (*Date) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Date) GetYear() uint32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *Date) GetMonth() uint32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *Date) GetDay() uint32 {
	if m != nil {
		return m.Day
	}
	return 0
}

func init() {
	proto.RegisterType((*PutEntityRequest)(nil), "directoryapi.PutEntityRequest")
	proto.RegisterType((*PutEntityResponse)(nil), "directoryapi.PutEntityResponse")
	proto.RegisterType((*GetEntityRequest)(nil), "directoryapi.GetEntityRequest")
	proto.RegisterType((*GetEntityResponse)(nil), "directoryapi.GetEntityResponse")
	proto.RegisterType((*Entity)(nil), "directoryapi.Entity")
	proto.RegisterType((*Patient)(nil), "directoryapi.Patient")
	proto.RegisterType((*Office)(nil), "directoryapi.Office")
	proto.RegisterType((*Date)(nil), "directoryapi.Date")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Directory service

type DirectoryClient interface {
	PutEntity(ctx context.Context, in *PutEntityRequest, opts ...grpc.CallOption) (*PutEntityResponse, error)
	GetEntity(ctx context.Context, in *GetEntityRequest, opts ...grpc.CallOption) (*GetEntityResponse, error)
}

type directoryClient struct {
	cc *grpc.ClientConn
}

func NewDirectoryClient(cc *grpc.ClientConn) DirectoryClient {
	return &directoryClient{cc}
}

func (c *directoryClient) PutEntity(ctx context.Context, in *PutEntityRequest, opts ...grpc.CallOption) (*PutEntityResponse, error) {
	out := new(PutEntityResponse)
	err := grpc.Invoke(ctx, "/directoryapi.Directory/PutEntity", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *directoryClient) GetEntity(ctx context.Context, in *GetEntityRequest, opts ...grpc.CallOption) (*GetEntityResponse, error) {
	out := new(GetEntityResponse)
	err := grpc.Invoke(ctx, "/directoryapi.Directory/GetEntity", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Directory service

type DirectoryServer interface {
	PutEntity(context.Context, *PutEntityRequest) (*PutEntityResponse, error)
	GetEntity(context.Context, *GetEntityRequest) (*GetEntityResponse, error)
}

func RegisterDirectoryServer(s *grpc.Server, srv DirectoryServer) {
	s.RegisterService(&_Directory_serviceDesc, srv)
}

func _Directory_PutEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutEntityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirectoryServer).PutEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/directoryapi.Directory/PutEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirectoryServer).PutEntity(ctx, req.(*PutEntityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Directory_GetEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEntityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirectoryServer).GetEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/directoryapi.Directory/GetEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirectoryServer).GetEntity(ctx, req.(*GetEntityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Directory_serviceDesc = grpc.ServiceDesc{
	ServiceName: "directoryapi.Directory",
	HandlerType: (*DirectoryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PutEntity",
			Handler:    _Directory_PutEntity_Handler,
		},
		{
			MethodName: "GetEntity",
			Handler:    _Directory_GetEntity_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/directoryapi/directory.proto",
}

func init() { proto.RegisterFile("pkg/directoryapi/directory.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 412 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xdd, 0x6e, 0xd3, 0x40,
	0x10, 0x85, 0xed, 0x26, 0x75, 0xf1, 0x94, 0x88, 0x64, 0x55, 0x90, 0xc5, 0x5f, 0xab, 0xbd, 0xe2,
	0x02, 0xb9, 0xa5, 0xbc, 0x00, 0x54, 0x45, 0x94, 0x9b, 0x12, 0xed, 0x0b, 0x44, 0x9b, 0x78, 0x4c,
	0x56, 0xc4, 0x3f, 0xd8, 0x63, 0x09, 0x3f, 0x0b, 0x8f, 0xc0, 0x0d, 0x8f, 0x88, 0x3c, 0x6b, 0x27,
	0x8e, 0x81, 0x48, 0xdc, 0xed, 0xce, 0x37, 0x73, 0xf6, 0x8c, 0x7c, 0x0c, 0x17, 0xf9, 0xd7, 0x2f,
	0x97, 0x91, 0x29, 0x70, 0x45, 0x59, 0x51, 0xeb, 0xdc, 0xec, 0x2e, 0x61, 0x5e, 0x64, 0x94, 0x89,
	0x87, 0x7d, 0x2a, 0xdf, 0xc1, 0x74, 0x5e, 0xd1, 0x87, 0x94, 0x0c, 0xd5, 0x0a, 0xbf, 0x55, 0x58,
	0x92, 0x78, 0x0d, 0x1e, 0x72, 0x21, 0x70, 0x2f, 0xdc, 0x57, 0xa7, 0xd7, 0x67, 0x61, 0x7f, 0x24,
	0x6c, 0x9b, 0xdb, 0x1e, 0x79, 0x05, 0xb3, 0x9e, 0x42, 0x99, 0x67, 0x69, 0x89, 0xe2, 0x19, 0xf8,
	0x16, 0x2f, 0x4c, 0xc4, 0x2a, 0xbe, 0x7a, 0x60, 0x0b, 0x9f, 0x22, 0x79, 0x09, 0xd3, 0x8f, 0x38,
	0x78, 0xf3, 0xe0, 0xc0, 0x7b, 0x98, 0xf5, 0x06, 0xda, 0x27, 0xfe, 0xcf, 0xe5, 0x0f, 0x17, 0x3c,
	0x5b, 0x3a, 0xf8, 0x94, 0x78, 0x03, 0x27, 0xb9, 0x26, 0x83, 0x29, 0x05, 0x47, 0x2c, 0xfb, 0x78,
	0x5f, 0x76, 0x6e, 0xe1, 0x9d, 0xa3, 0xba, 0x3e, 0x11, 0x82, 0x97, 0xc5, 0xb1, 0x59, 0x61, 0x30,
	0xfa, 0x9b, 0x91, 0xcf, 0xcc, 0xee, 0x1c, 0xd5, 0x76, 0xdd, 0xcc, 0xe0, 0x11, 0xd5, 0x39, 0x2e,
	0x34, 0x51, 0x61, 0x96, 0x15, 0x61, 0x29, 0x7f, 0xb9, 0x70, 0xd2, 0x2a, 0x37, 0xf6, 0x36, 0xba,
	0xa4, 0x45, 0xaa, 0x13, 0xec, 0xec, 0x35, 0x85, 0x7b, 0x9d, 0xa0, 0x78, 0x01, 0x10, 0x9b, 0xa2,
	0xa3, 0x47, 0x4c, 0x7d, 0xae, 0x30, 0x3e, 0x87, 0xd3, 0xc4, 0x44, 0xd1, 0x06, 0x2d, 0x1f, 0x31,
	0x07, 0x5b, 0xe2, 0x86, 0x27, 0xe0, 0x95, 0x55, 0x1c, 0x9b, 0xef, 0xc1, 0x98, 0x59, 0x7b, 0x13,
	0x57, 0xe0, 0x2f, 0x4d, 0x41, 0xeb, 0x48, 0x13, 0x06, 0xc7, 0xbc, 0x86, 0xd8, 0x5f, 0xe3, 0x56,
	0x13, 0xaa, 0x5d, 0x93, 0x7c, 0x0e, 0x9e, 0xdd, 0x4c, 0x08, 0x18, 0xf7, 0xbc, 0xf2, 0x59, 0xde,
	0xc0, 0xb8, 0x19, 0x68, 0x58, 0x8d, 0xba, 0x60, 0x36, 0x51, 0x7c, 0x16, 0x67, 0x70, 0x9c, 0x64,
	0x29, 0xad, 0xd9, 0xfe, 0x44, 0xd9, 0x8b, 0x98, 0xc2, 0x28, 0xd2, 0x35, 0x5b, 0x9e, 0xa8, 0xe6,
	0x78, 0xfd, 0xd3, 0x05, 0xff, 0xb6, 0xb3, 0x20, 0xee, 0xc1, 0xdf, 0xc6, 0x4c, 0xbc, 0x1c, 0x7c,
	0x94, 0x41, 0x82, 0x9f, 0x9e, 0xff, 0x93, 0xdb, 0xf0, 0x48, 0xa7, 0xd1, 0xdb, 0x66, 0x6a, 0xa8,
	0x37, 0x4c, 0xe7, 0x50, 0xef, 0x8f, 0x30, 0x4a, 0x67, 0xe9, 0xf1, 0xdf, 0xf5, 0xf6, 0x77, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x66, 0x9e, 0x0f, 0xf3, 0x81, 0x03, 0x00, 0x00,
}
